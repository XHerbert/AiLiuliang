using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using System.Threading;
using System.Xml;
using mshtml;
using System.IO;
using System.Drawing.Imaging;

namespace SimulateMouse
{
    public partial class MouseEvent : Form
    {
        public MouseEvent()
        {
            InitializeComponent();
        }

        //结构体布局 本机位置
        [StructLayout(LayoutKind.Sequential)]
        struct NativeRECT
        {
            public int left;
            public int top;
            public int right;
            public int bottom;
        }

        //将枚举作为位域处理
        [Flags]
        enum MouseEventFlag : uint //设置鼠标动作的键值
        {
            Move = 0x0001,               //发生移动
            LeftDown = 0x0002,           //鼠标按下左键
            LeftUp = 0x0004,             //鼠标松开左键
            RightDown = 0x0008,          //鼠标按下右键
            RightUp = 0x0010,            //鼠标松开右键
            MiddleDown = 0x0020,         //鼠标按下中键
            MiddleUp = 0x0040,           //鼠标松开中键
            XDown = 0x0080,
            XUp = 0x0100,
            Wheel = 0x0800,              //鼠标轮被移动
            VirtualDesk = 0x4000,        //虚拟桌面
            Absolute = 0x8000
        }
        private string code = string.Empty;
        private byte[] picData = null;
        //设置鼠标位置
        [DllImport("user32.dll")]
        static extern bool SetCursorPos(int X, int Y);

        //设置鼠标按键和动作
        [DllImport("user32.dll")]
        static extern void mouse_event(MouseEventFlag flags, int dx, int dy,
            uint data, UIntPtr extraInfo); //UIntPtr指针多句柄类型

        [DllImport("user32.dll")]
        static extern IntPtr FindWindow(string strClass, string strWindow);

        //该函数获取一个窗口句柄,该窗口类名和窗口名与给定字符串匹配 hwnParent=Null从桌面窗口查找
        [DllImport("user32.dll")]
        static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter,
            string strClass, string strWindow);

        [DllImport("user32.dll")]
        static extern bool GetWindowRect(HandleRef hwnd, out NativeRECT rect);

        [DllImport("user32.dll")]
        static extern void keybd_event(byte bVk, byte bScan, uint dwFlags, int dwExtraInfo);

        //定义变量
        const int AnimationCount = 400;
        private Point endPosition;
        private int count;

        private void button1_Click(object sender, EventArgs e)
        {
            NativeRECT rect;
            //获取主窗体句柄
            IntPtr ptrTaskbar = FindWindow("WindowsForms10.Window.8.app.0.b7ab7b_r13_ad1", null);
            if (ptrTaskbar == IntPtr.Zero)
            {
                MessageBox.Show("No windows found!");
                return;
            }
            //获取窗体中"button1"按钮
            IntPtr ptrStartBtn = FindWindowEx(ptrTaskbar, IntPtr.Zero, null, "");
            if (ptrStartBtn == IntPtr.Zero)
            {
                MessageBox.Show("No button found!");
                return;
            }
            //获取窗体大小
            GetWindowRect(new HandleRef(this, ptrStartBtn), out rect);
            endPosition.X = (rect.left + rect.right) / 2;
            endPosition.Y = (rect.top + rect.bottom) / 2;
            //判断点击按钮
            if (checkBox1.Checked)
            {
                //选择"查看鼠标运行的轨迹"
                this.count = AnimationCount;
                movementTimer.Start();
            }
            else
            {
                SetCursorPos(endPosition.X, endPosition.Y);
                mouse_event(MouseEventFlag.LeftDown, 0, 0, 0, UIntPtr.Zero);
                mouse_event(MouseEventFlag.LeftUp, 0, 0, 0, UIntPtr.Zero);
                //模拟输入
                //SendKeys.Send("ss");
                keybd_event(96, 0, 0, 0);
                keybd_event(96, 0, 0, 0);
                keybd_event(96, 0, 0, 0);
                keybd_event(96, 0, 0, 0);
                keybd_event(96, 0, 0, 0);
                keybd_event(77, 0, 0, 0);
                keybd_event(108, 0, 0, 0);

                //SendMessage(ptrStartBtn, 0xD, str.Capacity, str);   
                textBox1.Text = String.Format("{0},{1}", MousePosition.X, MousePosition.Y);
            }
        }

        //Tick:定时器,每当经过多少时间发生函数
        private void movementTimer_Tick(object sender, EventArgs e)
        {
            int stepx = (endPosition.X - MousePosition.X) / count;
            int stepy = (endPosition.Y - MousePosition.Y) / count;
            count--;
            if (count == 0)
            {
                movementTimer.Stop();
                mouse_event(MouseEventFlag.LeftDown, 0, 0, 0, UIntPtr.Zero);
                mouse_event(MouseEventFlag.LeftUp, 0, 0, 0, UIntPtr.Zero);
                keybd_event(96, 0, 0, 0);
                keybd_event(96, 0, 0, 0);
            }
            textBox1.Text = String.Format("{0},{1}", MousePosition.X, MousePosition.Y);
            mouse_event(MouseEventFlag.Move, stepx, stepy, 0, UIntPtr.Zero);
        }

        private void movementTimer_Tick_1(object sender, EventArgs e)
        {
            int stepx = (endPosition.X - MousePosition.X) / count;
            int stepy = (endPosition.Y - MousePosition.Y) / count;
            count--;
            if (count == 0)
            {
                movementTimer.Stop();
                mouse_event(MouseEventFlag.LeftDown, 0, 0, 0, UIntPtr.Zero);
                mouse_event(MouseEventFlag.LeftUp, 0, 0, 0, UIntPtr.Zero);
            }
            textBox1.Text = String.Format("{0},{1}", MousePosition.X, MousePosition.Y);
            mouse_event(MouseEventFlag.Move, stepx, stepy, 0, UIntPtr.Zero);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            //new FormTest().Show();
            //this.webBrowser1.Url = new Uri("http://www.baidu.com");//指定url地址为百度首页  
            /*
            HtmlElement searchWords = webBrowser1.Document.All["kw"];//获取百度搜索的文本框  
            HtmlElement searchButton = webBrowser1.Document.All["su"];//获取百度搜索的按钮  
            searchWords.SetAttribute("value", "guwei4037");//给百度搜索的文本框赋值  
            searchButton.InvokeMember("click");//调用百度搜索按钮的点击事件
             */
            if (!webBrowser1.IsBusy)
            {
                HtmlElement mobile = webBrowser1.Document.All["mobile"];
                HtmlElement pass = webBrowser1.Document.All["password"];
                HtmlElement codes = webBrowser1.Document.All["checkCode"];
                HtmlElement btn = webBrowser1.Document.All["loginButoon"];
                HtmlElement pass2 = webBrowser1.Document.All["password1"];
                /*
                HtmlElement codeImg = webBrowser1.Document.All["codeImg"];
                HtmlDocument doc = (HtmlDocument)webBrowser1.Document.DomDocument;
                HtmlBody body = (HTMLBody)doc.body;
                IHtmlControlRange rang = (IHTMLControlRange)body.createControlRange();
                
                IHTMLControlElement img = (IHTMLControlElement)webBrowser1.Document.Images["vcode_img"].DomElement;
                IHTMLControlRange range = (IHTMLControlRange)((HTMLBody)html.body).createControlRange();
                range.add(img);
                range.execCommand("Copy", false, null);
                img = null;
                range = null;
                html = null;
                if (Clipboard.ContainsImage())
                    this.pictureBox1.Image = Clipboard.GetImage();
                else
                    MessageBox.Show("执行不成功");
                Clipboard.Clear();
                */

                object[] objects = new object[1];
                objects[0] = 2000;

                mobile.SetAttribute("value", "15810230925");
                pass.SetAttribute("value", "xhb198992566");
                pass2.SetAttribute("value", "xhb198992566");


                codes.SetAttribute("value", this.code);

                //btn.InvokeMember("click");
                //webBrowser1.Document.InvokeScript("login");
            }
        }

        private void MouseEvent_Load(object sender, EventArgs e)
        {
            //this.webBrowser1.ObjectForScripting = this;
            this.webBrowser1.Url = new Uri("https://data.10086.cn/pc/login.do");//指定url地址为百度首页  
            this.picData = GetPic();
            code = GetCode(picData);
        }

        //private Image GetWebImage(WebBrowser WebCtl, HtmlElement ImgeTag)
        //{
        //    IHTMLControlElement img = (IHTMLControlElement)webBrowser1.Document.Images["vcode_img"].DomElement;
        //    IHTMLControlRange range = (IHTMLControlRange)((HTMLBody)html.body).createControlRange();
        //    range.add(img);
        //    range.execCommand("Copy", false, null);
        //    img = null;
        //    range = null;
        //    html = null;
        //    if (Clipboard.ContainsImage())
        //        this.pictureBox1.Image = Clipboard.GetImage();
        //    else
        //        MessageBox.Show("执行不成功");
        //    Clipboard.Clear();
        //    /*
        //    HtmlDocument doc = (HtmlDocument)WebCtl.Document.DomDocument;
        //    HTMLBody body = doc.Body;
        //    IHTMLControlRange rang = (IHTMLControlRange)body.createControlRange();
        //    IHTMLControlElement Img = (IHTMLControlElement)ImgeTag.DomElement; //图片地址

        //    Image oldImage = Clipboard.GetImage();
        //    rang.add(Img);
        //    rang.execCommand("Copy", false, null);  //拷贝到内存
        //    Image numImage = Clipboard.GetImage();  //从 Clipboard中取图
        //    Clipboard.SetImage(oldImage);     //还原
        //    return numImage;
        //    */
        //}


        private string GetCode(byte[] data)
        {
            //throw new NotImplementedException();
            string user = "qq185427977";
            string pass = "qq12345678";
            string typeid = "2040";
            string softid = "1";
            string softKey = "b40ffbee5c1cf4e38028c197eb2fc751";
            string result = string.Empty;

            //必要的参数
            var param = new Dictionary<object, object>
                        {
                            {"username",user},
                            {"password",pass},
                            {"typeid",typeid},
                            {"timeout","90"},
                            {"softid",softid},
                            {"softkey",softKey}
                            //{"imageurl",url}
                            //{"username",TxtConfigUserName.Text},
                            //{"password",TxtConfigPassWord.Text},
                            //{"typeid",TxtConfigTypeId.Text},
                            //{"timeout","90"},
                            //{"softid",TxtConfigSoftId.Text},
                            //{"softkey",TxtConfigSoftKey.Text},
                            //{"imageurl",TxtImageUrl.Text}
                        };
            //Thread t = new Thread(new ThreadStart(delegate
            //{
            //    //richTextBox1.BeginInvoke(new EventHandler(delegate
            //{
            //    richTextBox1.AppendText("正在提交服务器..\r\n");
            //}));
            //提交服务器
            string httpResult = RuoKuaiHttp.Post("http://api.ruokuai.com/create.xml", param, data);
            //string httpResult = RuoKuaiHttp.HttpPost("http://localhost:3186/Client/Create.ashx", param);
            //richTextBox1.BeginInvoke(new EventHandler(delegate
            //{
            //    richTextBox1.AppendText(httpResult + "\r\n");
            //    richTextBox1.Select(richTextBox1.TextLength, richTextBox1.TextLength);
            //    richTextBox1.ScrollToCaret();
            //}));
            XmlDocument xmlDoc = new XmlDocument();
            try
            {
                xmlDoc.LoadXml(httpResult);
            }
            catch (Exception ex)
            {
                throw new Exception();
                //dataGridView1.BeginInvoke(new EventHandler(delegate
                //{
                //    dataGridView1.Rows[rowIndex].Cells["结果"].Value = "错误:返回格式有误";
                //}));
            }
            XmlNode idNode = xmlDoc.SelectSingleNode("Root/Id");
            XmlNode resultNode = xmlDoc.SelectSingleNode("Root/Result");
            XmlNode errorNode = xmlDoc.SelectSingleNode("Root/Error");
            //string finalResult = string.Empty;
            string topidid = string.Empty;
            if (resultNode != null && idNode != null)
            {
                topidid = idNode.InnerText;
                result = resultNode.InnerText;
            }

            //}));
            //t.IsBackground = true;
            //t.Start();
            return result;
        }

        void Window_Error(object sender, HtmlElementErrorEventArgs e)
        {
            e.Handled = true; // 阻止其他地方继续处理 
            string b = e.Description;
            string c = e.Url.ToString();
        }

        private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
        {

        }


        //把页面上的PIC拿下来
        private void button3_Click(object sender, EventArgs e)
        {
            HtmlElement codes = webBrowser1.Document.All["checkCode"];
            codes.Style = "position: absolute; z-index: 9999; top: 0px; left: 0px";
            Bitmap b = new Bitmap(codes.ClientRectangle.Width, codes.ClientRectangle.Height);
            MemoryStream ms = new MemoryStream();
            b.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp);
        }


        private byte[] GetPic()
        {
            WebBrowser wb = this.webBrowser2;
            Bitmap map;
            byte[] data = null;
            wb.Navigate("https://data.10086.cn/pc/checkCode/checkCode.do");
            //等待加载完毕
            while (wb.ReadyState < WebBrowserReadyState.Complete) Application.DoEvents();

            HtmlElement pic = wb.Document.Images[0];
            //HtmlElement pic = webBrowser1.Document.All["checkCode"];
            //Bitmap b = new Bitmap(pic.ClientRectangle.Width, pic.ClientRectangle.Height);

            //遍历寻找验证图像所在元素
            foreach (HtmlElement f in wb.Document.Images)
            {
                if (f.GetAttribute("src").ToLower().EndsWith("checkcode.do"))
                {
                    //将元素绝对定位到页面左上角
                    f.Style = "position: absolute; z-index: 9999; top: 0px; left: 0px";
                    //抓图
                    Bitmap b = new Bitmap(f.ClientRectangle.Width, f.ClientRectangle.Height);
                    //MemoryStream ms = new MemoryStream();
                    //b.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp);
                    //b.Save()
                    //byte[] bytes = ms.GetBuffer();

                    wb.DrawToBitmap(b, new Rectangle(new Point(), f.ClientRectangle.Size));
                    data = Bitmap2Byte(b, true);
                    pictureBox1.Image = b;
                    break;
                }
            }

            //MemoryStream ms = new MemoryStream();

            //b.Save(ms, System.Drawing.Imaging.ImageFormat.Bmp);
            //byte[] bytes = ms.GetBuffer();
            return data;
        }

        public byte[] Bitmap2Byte(Bitmap bitmap)
        {
            using (MemoryStream stream = new MemoryStream())
            {
                bitmap.Save(stream, System.Drawing.Imaging.ImageFormat.Bmp);
                byte[] data = new byte[stream.Length];
                stream.Seek(0, SeekOrigin.Begin);
                stream.Read(data, 0, Convert.ToInt32(stream.Length));
                return data;
            }
        }


        public byte[] Bitmap2Byte(Bitmap bitmap, bool local)
        {
            bitmap.Save("C:\\Pic.bmp", System.Drawing.Imaging.ImageFormat.Bmp);
            Image image = Image.FromFile("C:\\Pic.bmp");
            MemoryStream ms = new MemoryStream();
            image.Save(ms, ImageFormat.Bmp);
            ms.Flush();
            ms.Seek(0, SeekOrigin.Begin);
            byte[] buffer = new byte[ms.Length];
            ms.Read(buffer, 0, (int)ms.Length);//这里已经转成了字节
            return buffer;
        }
        //private void XXX()
        //{
        //    var code = "";
        //    var body = (mshtml.HTMLBodyClass)((mshtml.HTMLDocumentClass)webBrowser1.Document.Window.Frames[0].Document.DomDocument).body;
        //    IHTMLControlElement img = (IHTMLControlElement)((mshtml.HTMLDocumentClass)webBrowser1.Document.Window.Frames[0].Document.DomDocument).images.item("imgCode");
        //    IHTMLControlRange range = (IHTMLControlRange)body.createControlRange();
        //    IHTMLTxtRange txtRange = body.createTextRange();
        //    txtRange.execCommand("Unselect");
        //    range.add(img);
        //    range.execCommand("Copy");
        //    img = null;
        //    range = null;

        //    if (Clipboard.ContainsImage())
        //    {
        //        code = UnCodeBase.GetVarifyCodeFromWinWinTask((Bitmap)Clipboard.GetImage());
        //        var txtVrf = (mshtml.HTMLInputElementClass)((mshtml.HTMLDocumentClass)webBrowser1.Document.Window.Frames[0].Document.DomDocument).all.item("code");
        //        txtVrf.setAttribute("value", code);
        //        return true;
        //    }
        //}

    }
}
